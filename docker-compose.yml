version: "3.7"
services:
  gateway:
    build:
      context: gateway/docker
      dockerfile: dev/nginx/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - frontend
      - api

  frontend:
    build:
      context: frontend/docker/dev/nginx
    volumes:
      - ./frontend:/app
    depends_on:
      - frontend-node

# сервис подымаеться для запуска команды yarn start (которая запустит фронт)
  frontend-node:
    build:
      context: frontend/docker/dev/node
    volumes:
      - ./frontend:/app
# команда будет ждать пока не появиться файл .ready (создаеться когда установяться все зависимости для фронта)
# и потом запустит команду yarn start
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn start"
    tty: true

  frontend-node-cli:
    build:
      context: frontend/docker/dev/node
    volumes:
      - ./frontend:/app

  api:
    build:
      context: api/docker
      dockerfile: dev/nginx/Dockerfile
    volumes:
      - ./api:/app
    depends_on:
      - api-php-fpm

  api-php-fpm:
    build:
      context: api/docker
      dockerfile: dev/php-fpm/Dockerfile
    container_name: php-fpm
    hostname: php-fpm
    volumes:
      - ./api:/app
      - ./api/docker/dev/php/.bashrc:/root/.bashrc
      - ./api/docker/dev/php/.bash_aliases:/root/.bash_aliases
    environment:
      TERM: xterm-256color
      APP_ENV: 'dev'
      APP_DEBUG: 1
      DB_HOST: api-postgres
      DB_USER: cubic
      DB_PASSWORD: password
      DB_NAME: micro

  api-php-cli:
    build:
      context: api/docker
      dockerfile: dev/php-cli/Dockerfile
    container_name: php-cli
    hostname: php-cli
    volumes:
      - ./api:/app
      - ./api/docker/dev/php/.bashrc:/root/.bashrc
      - ./api/docker/dev/php/.bash_aliases:/root/.bash_aliases
    environment:
      APP_ENV: 'dev'
      APP_DEBUG: 1
      DB_HOST: api-postgres
      DB_USER: cubic
      DB_PASSWORD: password
      DB_NAME: micro

  api-postgres:
    image: postgres:12.2-alpine
    environment:
      POSTGRES_USER: cubic
      POSTGRES_PASSWORD: password
      POSTGRES_DB: micro
    volumes:
      - api-postgres:/var/lib/postgresql/data
    ports:
      - "54321:5432"

volumes:
  api-postgres: